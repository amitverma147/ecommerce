import React, { useState, useEffect } from "react";
// ðŸ’¡ Import Link for routing functionality
import { useLocation, useNavigate, Link } from "react-router-dom";
// ðŸŽ¯ Import the SubStore API function
import { fetchSubStores } from "../../utils/supabaseApi.js"; // Assuming you place the functions here

export default function SubStoreNav({ onClick }) {
Â  const location = useLocation();
Â  // ðŸŽ¯ State for substores and loading/error handling
Â  const [subStores, setSubStores] = useState([]);
Â  const [loading, setLoading] = useState(true);

Â  // ðŸŽ¯ Encapsulated data fetching logic
Â  useEffect(() => {
Â  Â  const loadSubStores = async () => {
Â  Â  Â  try {
Â  Â  Â  Â  // ðŸŽ¯ Use the fetchSubStores function
Â  Â  Â  Â  const data = await fetchSubStores();
Â  Â  Â  Â  setSubStores(data);
Â  Â  Â  } catch (err) {
Â  Â  Â  Â  console.error("Error fetching SubStores:", err.message);
Â  Â  Â  } finally {
Â  Â  Â  Â  setLoading(false);
Â  Â  Â  }
Â  Â  };
Â  Â  
Â  Â  loadSubStores();
Â  }, []); // Runs only once on mount

Â  // Check if the current path is relevant for this navigation component
Â  if (location.pathname !== "/all" && location.pathname !== "/") {
Â  Â  return null;
Â  }
Â  
Â  if (loading) {
Â  Â  Â  return <div className="p-4 text-center text-gray-500">Loading SubStores...</div>;
Â  }

Â  return (
Â  Â  <div className="flex overflow-x-auto whitespace-nowrap py-2 px-2 gap-0 hide-scrollbar md:hidden">
Â  Â  Â  {subStores.map((subStore) => {
Â  Â  Â  Â  // Assuming 'subStore' objects have a 'link' property for navigation
Â  Â  Â  Â  const isActive = location.pathname === subStore.link; // Check for active link
Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  key={subStore.id}
Â  Â  Â  Â  Â  Â  // ðŸŽ¯ Use the 'link' property for the Link's destination
Â  Â  Â  Â  Â  Â  to={subStore.link || "/"} 
Â  Â  Â  Â  Â  Â  className={`flex flex-col items-center w-[65px] py-1 rounded-lg font-medium shadow-sm transition-colors shrink-0
Â  Â  Â  Â  Â  Â  Â  ${isActive ? "bg-blue-100" : "bg-gray-200"}
Â  Â  Â  Â  Â  Â  Â  ${isActive ? "" : "hover:bg-gray-300"}
Â  Â  Â  Â  Â  Â  `}
Â  Â  Â  Â  Â  Â  onClick={() => {
Â  Â  Â  Â  Â  Â  Â  // Execute the optional onClick handler
Â  Â  Â  Â  Â  Â  Â  if (onClick) onClick(subStore.name); 
Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  Â  // ðŸŽ¯ Assuming the image column is named 'image'
Â  Â  Â  Â  Â  Â  Â  src={subStore.image}
Â  Â  Â  Â  Â  Â  Â  alt={subStore.name}
Â  Â  Â  Â  Â  Â  Â  className="w-9 h-9 object-contain"
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  <span className="text-xs">{subStore.name}</span>
Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  );
Â  Â  Â  })}
Â  Â  </div>
Â  );
}